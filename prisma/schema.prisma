// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

model User {
  id            String    @id @default(cuid())
  clerkId       String    @unique
  email         String    @unique
  firstName     String?
  lastName      String?
  imageUrl      String?
  role          Role      @default(USER)
  phone         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  cart         Cart?
  // Address relation
  addresses     Address[]

}

model Address {
  id            String    @id @default(cuid())
  street        String
  city          String
  state         String
  postalCode    String
  country       String
  isDefault     Boolean   @default(false)
  
  // User relation
  userId        String
  user          User      @relation(fields: [userId], references: [clerkId])
}



model Product {
  id            String    @id @default(cuid())
  name          String?
  description   String?
  price         Int?
  stock         Int?
  loction       String
  miles         String
  images        Image[]

    // Category relation
  categoryId    String

  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}


model Image {
  id         String   @id @default(cuid())
  url        String
  productId  String
  product    Product  @relation(fields: [productId], references: [id] , onDelete: Cascade)
}

model Category {
  id            String    @id @default(cuid())
  name          String    @unique
 
}

// Add these models to your schema.prisma

model Cart {
  id        String      @id @default(cuid())
  userId    String      @unique
  user      User        @relation(fields: [userId], references: [clerkId])
  items     CartItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model CartItem {
  id        String   @id @default(cuid())
  cartId    String
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
}